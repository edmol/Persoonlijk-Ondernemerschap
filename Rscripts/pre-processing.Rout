
R version 3.0.2 (2013-09-25) -- "Frisbee Sailing"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #                     PRE PROCESSING SCRIPT OM RAPPORT PO COCKPIT VOOR TE BEREIDEN. EN
> #                     BEREKENINGEN TE MAKEN. 100 stellingen van respondent en 1 t/m 4 feedbackgevers
> #                     Tokens van feedbackgevers worden opgenomen in tokenrecord van limesurvey van respondent.
> #                     Historie tabel wordt gevuld om verwerkte records bij te houden.
> #                     
> # Database variabelen
> #
> require(RMySQL)
Loading required package: RMySQL
Loading required package: DBI
> driver <- MySQL(max.con=100, force.reload = TRUE)
> #
> survey <- '714972'
> respondent    <- 'r'
> feedbackgever <- 'f'
> nooit <- 'n'
> incidenteel <- 'i'
> soms <- 's'
> meestal <- 'm'
> altijd <- 'a'
> #
> ###################################################################################
> # ZET PRODUCTIE OF TEST VARIABELE HIER !!!!!!!!!!!!!!!!!!!!!!!!!!
> ###################################################################################
> ontwikkel <- "N" 
> #################################################################################
> if (ontwikkel == "Y")  {
+   db_parmfile <- "/Library/Webserver/Documents/Rscripts/RMySQL.cnf"
+   toetsgrp <- 'potoets'
+   histgrp  <- 'machist'
+   dirgraph <- '/Library/Webserver/Documents/wp-content/gallery/porapporten/'
+   functie_map <- "/Library/Webserver/Documents/Rscripts/functies/"
+   data_map     <- "/Library/Webserver/Documents/Rscripts/data/"
+   data_file    <- "toets-po-cockpit.csv"
+ } else
+ { 
+   db_parmfile <- "/var/www/Rscripts/RMySQL.cnf"
+   toetsgrp <- 'prdtoets'
+   histgrp  <- 'prdhist'
+   dirgraph <- '/var/www/4u-change.com/web/wp-content/gallery/porapporten/'
+   functie_map <- "/var/www/Rscripts/functies/"
+   data_map     <- "/var/www/Rscripts/data/"
+   data_file    <- "toets-po-cockpit.csv"
+ }
> # ----------------------------------------------------------------------------------------
> # inlezen van de datafile toets-po-cockpit.csv uit Rscripts/data 
> # Hierin staan alle gegevens van de vragen en de waarden van de aantwoorden op deze vragen.
> # ----------------------------------------------------------------------------------------
> source(paste(functie_map,"leesinputfile.R",sep=""))
> #infile <- leesinputfile(data_map,data_file)
> #vraag_factor              <- infile[,2]
> #vraag                     <- infile[,3]
> #vraag_soort               <- infile[,4]
> #vraag_waarden_nooit       <- as.numeric(infile[,5])
> #vraag_waarden_incidenteel <- as.numeric(infile[,6])
> #vraag_waarden_soms        <- as.numeric(infile[,7])
> #vraag_waarden_meestal     <- as.numeric(infile[,8])
> #vraag_waarden_altijd      <- as.numeric(infile[,9])
> # ----------------------------------------------------------------------------------------
> # Tokentabel is de tabel in limesurvey met de naam lime_tokens_xxxxx en bevat de tokens
> # resulttabel is de tabel in limesurvey met de naam lime_survey_xxxxx en bevat de resultaten
> # ----------------------------------------------------------------------------------------
> tokentable <- paste('lime_tokens_',survey,sep="")
> tokentable_historie <- paste('lime_tokens_',survey,'_historie',sep="")
> resulttable <- paste('lime_survey_',survey,sep="")
> # ----------------------------------------------------------------------------------------
> # Opmaken database connectie met survey en historiedatabase
> # ----------------------------------------------------------------------------------------
> surveydb=dbConnect(driver, default.file = db_parmfile, group = toetsgrp)
> # ----------------------------------------------------------------------------------------
> # Algemene functies
> # ----------------------------------------------------------------------------------------
> saveg <- function (fn, width = 5, height=5, pointsize = 12)
+ {
+   dev.copy(device=pdf, file=paste(fn,".pdf",sep=""),
+            width=width, height=height,pointsize=pointsize)
+   dev.off()
+   dev.copy(device=postscript, file=paste(fn,".ps",sep=""),
+            width=480, height=480, pointsize=pointsize)
+   dev.off()
+ }
> rows.in.tokenresults.that.are.not.in.historieresults  <- function(tokenresults,historieresults)
+ {
+   tokenresults.vec <- apply(tokenresults, 1, paste, collapse = "")
+   historieresults.vec <- apply(historieresults, 1, paste, collapse = "")
+   tokenresults.without.historieresults.rows <- tokenresults[!tokenresults.vec %in% historieresults.vec,]
+   return(tokenresults.without.historieresults.rows)
+ }
> #
> # Einde functies
> #
> # ----------------------------------------------------------------------------------------
> # aanmaken resultsets a) completed surveyresults b) already processed historie
> # -----------------------------------------------------------------------------------------
> tokenresults = dbGetQuery(surveydb,statement=paste('select * from ',tokentable,' where completed!="N"',sep=""))
> historieresults = dbGetQuery(surveydb,statement=paste('select * from ',tokentable_historie,' where completed!="N"',sep=""))
> #
> # ----------------------------------------------------------------------------------------
> # Als er geen nieuwe surveyresults zijn die nog niet verwerkt zijn dan kunnen we stoppen 
> # ----------------------------------------------------------------------------------------
> #
> finalnum <- (nrow(tokenresults)-nrow(historieresults))
> if (finalnum < 1) 
+ {
+   dbDisconnect(surveydb)
+   dbUnloadDriver(driver)
+   stop("geen nieuwe surveys gevonden")
+ }
Error: geen nieuwe surveys gevonden
Execution halted
