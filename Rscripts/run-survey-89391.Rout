
R version 3.0.2 (2013-09-25) -- "Frisbee Sailing"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> #                     RUN SURVEY 89391 R SCRIPT VOOR TOETS Taak- en Relatiegerichtheid
> # 
> # Require van packages ! Deze moeten vooraf geinstalleerd zijn
> #
> require(grDevices)
> require(season)
Loading required package: season
Warning message:
In library(package, lib.loc = lib.loc, character.only = TRUE, logical.return = TRUE,  :
  there is no package called ‘season’
> #
> # Database variabelen
> #
> require(RMySQL)
Loading required package: RMySQL
Loading required package: DBI
> driver <- MySQL(max.con=100, force.reload = TRUE)
> #
> survey <- '89391'
> #
> # Factoren in procenten vertrouwen creeeren en doelsen realiseren zijn competentie en 3 en 4 in prio
> # Factoren in procenten eerlijkheid en intentie (motieven) zijnkarakter eigenschappen en 1 en 2 in prio
> #
> gseparatie  <- 25
> gintegratie <- 25
> grelatie    <- 25
> gdedicatie  <- 25
> #
> ###################################################################################
> # ZET PRODUCTIE OF TEST VARIABELE HIER !!!!!!!!!!!!!!!!!!!!!!!!!!
> ###################################################################################
> ontwikkel <- "N" 
> #################################################################################
> if (ontwikkel == "Y")  {
+   db_parmfile <- "/Library/Webserver/Documents/Rscripts/RMySQL.cnf"
+   toetsgrp <- 'prdtoets'
+   histgrp  <- 'prdhist'
+   dirgraph <- '/Library/Webserver/Documents/wp-content/gallery/'
+   meangraph <- '/Library/Webserver/Documents/wp-content/gallery/mean/'
+ } else
+ { 
+   db_parmfile <- "/var/www/Rscripts/RMySQL.cnf"
+   toetsgrp <- 'toetsen'
+   histgrp  <- 'prdhist'
+   dirgraph <- '/var/www/4u-change.com/web/wp-content/gallery/'
+   meangraph <- '/var/www/4u-change.com/web/wp-content/gallery/mean/'
+ }
> # ------------------------------------------------------------------------------------------------
> # Tokentabel is de tabel in limesurvey met de naam lime_tokens_xxxxx en bevat de tokens
> # resulttabel is de tabel in limesurvey met de naam lime_survey_xxxxx en bevat de resultaten
> # ------------------------------------------------------------------------------------------------
> tokentable <- paste('lime_tokens_',survey,sep="")
> resulttable <- paste('lime_survey_',survey,sep="")
> # ------------------------------------------------------------------------------------------------
> # Opmaken database connectie met survey en historiedatabase
> # ------------------------------------------------------------------------------------------------
> surveydb=dbConnect(driver, default.file = db_parmfile, group = toetsgrp)
> historiedb=dbConnect(driver, default.file=db_parmfile, group = histgrp)
> # ------------------------------------------------------------------------------------------------
> # Algemene functies
> # ------------------------------------------------------------------------------------------------
> saveg <- function (fn, width = 5, height=5, pointsize = 12)
+ {
+     dev.copy(device=pdf, file=paste(fn,".pdf",sep=""),
+              width=width, height=height,pointsize=pointsize)
+     dev.off()
+     dev.copy(device=postscript, file=paste(fn,".ps",sep=""),
+              width=480, height=480, pointsize=pointsize)
+     dev.off()
+ }
> rows.in.tokenresults.that.are.not.in.historieresults  <- function(tokenresults,historieresults)
+ {
+   tokenresults.vec <- apply(tokenresults, 1, paste, collapse = "")
+   historieresults.vec <- apply(historieresults, 1, paste, collapse = "")
+   tokenresults.without.historieresults.rows <- tokenresults[!tokenresults.vec %in% historieresults.vec,]
+   return(tokenresults.without.historieresults.rows)
+ }
> #
> # Einde functies
> #
> # ------------------------------------------------------------------------------------------------
> # aanmaken resultsets a) completed surveyresults b) already processed historie
> # ------------------------------------------------------------------------------------------------
> tokenresults = dbGetQuery(surveydb,statement=paste('select * from ',tokentable,' where completed!="N"',sep=""))
> historieresults = dbGetQuery(historiedb,statement=paste('select * from ',tokentable,' where completed!="N"',sep=""))
> #
> # ------------------------------------------------------------------------------------------------
> # Als er geen nieuwe surveyresults zijn die nog niet verwerkt zijn dan kunnen we stoppen 
> # ------------------------------------------------------------------------------------------------
> #
> finalnum <- (nrow(tokenresults)-nrow(historieresults))
> if (finalnum < 1) 
+ {
+   dbDisconnect(surveydb)
+   dbDisconnect(historiedb)
+   dbUnloadDriver(driver)
+   stop("geen nieuwe surveys gevonden")
+ }
Error: geen nieuwe surveys gevonden
Execution halted
